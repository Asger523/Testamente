<EditForm Model="@testator" class="container mt-4">
    <DataAnnotationsValidator />
    <ValidationSummary class="alert alert-danger" />

    <h5>Indtastning for testator:</h5>
    <div class="mb-3">
        <label for="name" class="form-label">Name:</label>
        <InputText id="name" @bind-Value="testator.Name" class="form-control" placeholder="Skriv dit navn her"/>
    </div>
    <div class="mb-3">
        <label for="gender" class="form-label">Gender:</label>
        <InputSelect id="gender" @bind-Value="testator.Gender" class="form-select">
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
        </InputSelect>
    </div>
    <div class="mb-3">
        <label for="relationshipStatus" class="form-label">Relationship Status:</label>
        <InputSelect id="relationshipStatus" @bind-Value="testator.RelationshipStatus" class="form-select" @onchange="CalculatePercentage">
            <option value="">Select Relationship Status</option>
            <option value="Sammenboende">Sammen Boende</option>
            <option value="Gift">Gift</option>
            <option value="Ugift">Ugift</option>
            <option value="Eneboende">Eneboende</option>
            <option value="Ingenbørn">Ingen børn</option>
            <option value="SammenboendeMedBørn">Sammenboende Mode børn</option>
        </InputSelect>
    </div>
    <div class="mb-3">
        <label for="phoneNumber" class="form-label">Phone Number:</label>
        <InputText id="phoneNumber" @bind-Value="testator.PhoneNumber" class="form-control" placeholder="+45 XXXXXXXX" />
    </div>
    <div class="mb-3">
        <label for="email" class="form-label">Email:</label>
        <InputText id="email" @bind-Value="testator.Email" class="form-control" placeholder="eksempel@email.dk" />
    </div>
    <button type="submit" @onclick="Submit_New_Testator" class="btn btn-primary">Submit</button>
</EditForm>

@code {
        Testator testator = new Testator();
        private string? selectedRelationshipStatus = string.Empty;
        private float? Percentage = 0.0f;        

    async Task Submit_New_Testator () {
        TestatorRepo.AddTestator (testator);
        
        // Trigger the event callback to invoke method in the parent component
        if (OnSubmitCallback.HasDelegate)
        {
            await OnSubmitCallback.InvokeAsync(); // Trigger the parent's method
        }
    }

    // "EventCallback" som modtager et event fra "Home.razor"-siden
    // Naar vi saa klikker paa vores Submit-knap, trigger vi det her event
    // Vi beh�ver dette fordi vores metode til at gemme denne component's form ligger paa Home-pagen (og ikke heri)
    // Saa vi "ringer tilbage" for at trigger den, via CallBack'et!

    // NOTE Det bliver kaldt opp i "Submit_New_Testator()"
    [Parameter] public EventCallback OnSubmitCallback { get; set; }


    private void CalculatePercentage(ChangeEventArgs e)
    {
        selectedRelationshipStatus = e.Value.ToString();
        switch (selectedRelationshipStatus)
        {
            case "Sammenboende":
                Percentage = 0.25f;
                break;
            case "Gift":
                Percentage = 0.50f;
                break;
            case "Ugift":
                Percentage = 0.50f;
                break;
            case "Eneboende":
                Percentage = 0.75f;
                break;
            case "Ingenbørn":
                Percentage = 0.75f;
                break;
            case "SammenboendeMedBørn":
                Percentage = 1.00f;
                break;
            default:
                Percentage = 0.0f;
                break;
        }
    }

}